# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

parameters:
  runTests: 'true'

steps:
- task: UsePythonVersion@0
  displayName: 'Use Python $(python.version)'
  inputs:
    versionSpec: '$(python.version)'

# Enable long path support on Windows so that all packages can be installed correctly
- script: 'reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f'
  displayName: 'Enable long paths on Windows'
  condition: and(succeeded(), eq(variables['Agent.OS'], 'Windows_NT'))

# Install the package
- script: 'python -m pip install --upgrade pip && pip install --upgrade setuptools && pip install .'
  displayName: 'Install dependencies'

- script: 'python setup.py build_sphinx -W'
  displayName: 'Build documentation'

- ${{ if eq(parameters.runTests, 'true') }}:
  - script: 'pip install pycodestyle && pycodestyle econml'
    failOnStderr: true
    displayName: Linting
    continueOnError: true

  # Set mark to disable slow tests via environment variable, depending on certain conditions
  - powershell: |
      Write-Host '##vso[task.setvariable variable=PYTEST_ADDOPTS]-m "not slow"'
    displayName: 'Define markers for non-nightly builds'
    condition: and(succeeded(), eq(variables['runAllTests'], 'false'), ne(variables['Build.Reason'], 'Schedule'))
    enabled: false

  - script: 'python setup.py pytest'
    displayName: 'Unit tests'

  - task: PublishTestResults@2
    displayName: 'Publish Test Results **/test-results.xml'
    inputs:
      testResultsFiles: '**/test-results.xml'
      testRunTitle: 'Python $(python.version), image $(imageName)'
    condition: succeededOrFailed()
