# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

variables:
  runAllTests: 'true'

jobs:
- job: 'EvalChanges'
  displayName: 'Analyze changed files to determine which job to run'
  steps:
  # We want to enforce the following rules:
  # * if all modifications are to README.md
  #     no testing is needed
  # * elif all modifications are to docs/* (and possibly README.md)
  #     then only docs need to be built to verify consistency (these changes cannot affect tests)
  # * otherwise, full test suite needs to run
  # For a PR build, HEAD will be the merge commit, and we want to diff against the base branch,
  #  which will be the first parent: HEAD^ 
  - powershell: |
      $editedFiles = git diff HEAD^ --name-only
      $editedFiles # echo edited files to enable easier debugging
      $codeChanges = $false
      $docChanges = $false
      $changeType = "none"
      foreach ($file in $editedFiles) {
        switch -Wildcard ($file) {
          "README.md" { Continue }
          "doc/*" { $docChanges = $true; Continue }
          default { $codeChanges = $true; Continue }
        }
      }
      if ($codeChanges) { $changeType = "code" }
      elseif ($docChanges) { $changeType = "docs" }
      Write-Host "##vso[task.setvariable variable=changeType]$changeType"
    displayName: 'Determine type of code change for Pull Requests'
    condition: eq(variables['Build.Reason'], 'PullRequest')
  # For non-PR builds, we always run the full test suite
  - powershell: |
      Write-Host "##vso[task.setvariable variable=changeType]code"
    displayName: 'Determine type of code change for other builds'
    condition: ne(variables['Build.Reason'], 'PullRequest')
  - powershell: |
      Write-Host "##vso[task.setvariable variable=changeType;isOutput=true]$(changeType)"
    name: output
    displayName: 'Output change type'

- job: 'Docs'
  displayName: 'Build documentation'  
  dependsOn: 'EvalChanges'
  condition: eq(dependencies.EvalChanges.outputs['output.changeType'], 'docs')
  variables:
    python.version: '3.6'
  steps:
  - template: azure-pipelines-steps.yml
    parameters:
      runTests : 'false'

- job: 'FullTests'
  dependsOn: 'EvalChanges'
  condition: eq(dependencies.EvalChanges.outputs['output.changeType'], 'code')
  strategy:
    matrix:
      Linux, Python 3.5:
        imageName: 'ubuntu-16.04'
        python.version: '3.5'
      macOS, Python 3.5:
        imageName: 'macOS-10.13'
        python.version: '3.5'
      Windows, Python 3.5:
        imageName: 'vs2017-win2016'
        python.version: '3.5'
      Linux, Python 3.6:
        imageName: 'ubuntu-16.04'
        python.version: '3.6'
      macOS, Python 3.6:
        imageName: 'macOS-10.13'
        python.version: '3.6'
      Windows, Python 3.6:
        imageName: 'vs2017-win2016'
        python.version: '3.6'
      Linux, Python 3.7:
        imageName: 'ubuntu-16.04'
        python.version: '3.7'
      macOS, Python 3.7:
        imageName: 'macOS-10.13'
        python.version: '3.7'
      Windows, Python 3.7:
        imageName: 'vs2017-win2016'
        python.version: '3.7'

  pool:
    vmImage: $(imageName)

  displayName: 'Run tests '

  steps:
  - template: azure-pipelines-steps.yml
    parameters:
      runTests : 'true'
